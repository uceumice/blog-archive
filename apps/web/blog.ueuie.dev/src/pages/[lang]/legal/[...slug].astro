---
import Legal from '../../../layouts/[lang]/legal/index.astro';
import type { Lang } from '../../../utils/i18n';
import { lang } from "@uceumice/constants";
import { CollectionEntry, getCollection } from 'astro:content';

/* -------------------------------------------------------------------------- */
/*                                Static Paths                                */
/* -------------------------------------------------------------------------- */
interface Params {
  lang: Lang;
  slug: string;
}

interface Props {
  entry: CollectionEntry<'legals'>;
  flags: {
    untranslated: boolean;
  }
}

export async function getStaticPaths() {
  const entries = await getCollection('legals');

  const results: { params: Params; props: Props }[] = [];

  entries.forEach((entry) => {
    const [lang_, slug] = entry.slug.split('/') as [Lang, string];
    
    const found = results.find((result)=>(result.params.lang === lang_ && result.params.slug === slug));

    if (found){
      found.props.entry = entry;
      found.props.flags.untranslated = false;
    } else {
      lang.forEach((lang)=>{
        results.push({
          params: { lang, slug }, 
          props: { entry, flags: { untranslated: lang !== lang_ } } 
        })
      });
    }
  });

  return results;
}

/* ------------------------------------ - ----------------------------------- */
const { Content } = await Astro.props.entry.render();
---

<Legal data={Astro.props.entry.data} flags={Astro.props.flags}>
  <Content />
</Legal>
